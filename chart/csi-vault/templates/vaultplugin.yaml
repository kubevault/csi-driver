apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "vault.plugin" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
    app: {{ template "vault.fullname" . }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "vault.plugin" . }}-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "update"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update", "create"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers", "csinodeinfos"]
  verbs: ["get", "watch", "list", "update", "patch", "create"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "list"]
- apiGroups: ["appcatalog.appscode.com"]
  resources: ["*"]
  verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "vault.plugin" . }}-binding
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4}}
    app: {{ template "vault.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ template "vault.plugin" . }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ template "vault.plugin" . }}-role
  apiGroup: rbac.authorization.k8s.io

---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "vault.plugin" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ template "vault.plugin" . }}
  template:
    metadata:
      labels:
        {{- include "vault.labels" . | nindent 8}}
        app: {{ template "vault.plugin" . }}
    spec:
      serviceAccount: {{ template "vault.plugin" . }}
      hostNetwork: true
      containers:
      - name: driver-registrar
        image: {{ .Values.registrar.registry }}/{{ .Values.registrar.repository }}:{{ .Values.registrar.tag }}
        args:
        - --v={{ .Values.logLevel }}
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/{{ .Values.driverName }}/csi.sock
        - name: KUBE_NODE_NAME
          {{- include "vault.node" . | nindent 10 }}
        imagePullPolicy: {{ .Values.registrar.pullPolicy }}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi/
        - name: registration-dir
          mountPath: /registration
      - name: csi-vaultplugin
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        image: {{ .Values.csi.registry }}/{{ .Values.csi.repository }}:{{ .Values.csi.tag }}
        args :
        - init
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--node=$(NODE_NAME)"
        - "--v={{ .Values.logLevel }}"
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: NODE_NAME
          {{- include "vault.node" . | nindent 10 }}
        imagePullPolicy: {{ .Values.csi.pullPolicy }}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet
          # needed so that any mounts setup inside this container are
          # propagated back to the host machine.
          mountPropagation: "Bidirectional"
        - mountPath: /dev
          name: device-dir
      volumes:
      # TODO(arslan): the registar is not implemented yet
      #- name: registrar-socket-dir
      #  hostPath:
      #    path: /var/lib/kubelet/device-plugins/
      #    type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/{{ .Values.driverName }}
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins/
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev