apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "vault.provisioner" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
    app: {{ template "vault.fullname" . }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "vault.provisioner" . }}-role
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4}}
    app: {{ template "vault.fullname" . }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers", "csinodeinfos"]
  verbs: ["get", "watch", "list", "update", "patch", "create"]
- apiGroups: ["appcatalog.appscode.com"]
  resources: ["*"]
  verbs: ["*"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "vault.provisioner" . }}-binding
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4}}
    app: {{ template "vault.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ template "vault.provisioner" . }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ template "vault.provisioner" . }}-role
  apiGroup: rbac.authorization.k8s.io
---
# needed for StatefulSet
kind: Service
apiVersion: v1
metadata:
  name: {{ template "vault.provisioner" . }}-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vault.labels" . | nindent 4}}
    app: {{ template "vault.provisioner" . }}
spec:
  selector:
    app: {{ template  "vault.provisioner" . }}
  ports:
  - name: dummy
    port: 12345
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template  "vault.provisioner" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ template "vault.provisioner" . }}
  serviceName: {{ template "vault.provisioner" . }}-service
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "vault.labels" . | nindent 8 }}
        app: {{ template "vault.provisioner" . }}
    spec:
      serviceAccount: {{ template "vault.provisioner" . }}
      containers:
      - name: csi-provisioner
        image: {{ .Values.provisioner.registry }}/{{ .Values.provisioner.repository }}:{{ .Values.provisioner.tag }}
        args:
        - "--provisioner={{ .Values.driverName }}"
        - "--csi-address=$(ADDRESS)"
        - "--v={{ .Values.logLevel }}"
        env:
        - name: ADDRESS
          value: {{ .Values.pluginAddress}}
        imagePullPolicy: {{ .Values.provisioner.pullPolicy }}
        volumeMounts:
        - name: socket-dir
          mountPath: {{ .Values.pluginDir}}
      - name: vault-csi-plugin
        image: {{ .Values.csi.registry }}/{{ .Values.csi.repository }}:{{ .Values.csi.tag }}
        args :
        - run
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--node=$(NODE_NAME)"
        - "--v={{ .Values.logLevel }}"
        env:
        - name: CSI_ENDPOINT
          value: unix://{{ .Values.pluginAddress }}
        - name: NODE_NAME
          {{- include "vault.node" . | nindent 10 }}
        imagePullPolicy: {{ .Values.csi.pullPolicy }}
        volumeMounts:
        - name: socket-dir
          mountPath: {{ .Values.pluginDir }}
      volumes:
      - name: socket-dir
        emptyDir: {}