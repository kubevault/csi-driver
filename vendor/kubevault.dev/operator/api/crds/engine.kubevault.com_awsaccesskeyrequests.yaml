apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: kubevault
  name: awsaccesskeyrequests.engine.kubevault.com
spec:
  group: engine.kubevault.com
  names:
    categories:
    - vault
    - appscode
    - all
    kind: AWSAccessKeyRequest
    listKind: AWSAccessKeyRequestList
    plural: awsaccesskeyrequests
    singular: awsaccesskeyrequest
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: https://www.vaultproject.io/api/secret/aws/index.html#parameters-6
            AWSAccessKeyRequestSpec contains information to request for vault aws
            credential
          properties:
            roleARN:
              description: The ARN of the role to assume if credential_type on the
                Vault role is assumed_role. Must match one of the allowed role ARNs
                in the Vault role. Optional if the Vault role only allows a single
                AWS role ARN; required otherwise.
              type: string
            roleRef:
              description: Contains vault aws role info
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
                namespace:
                  description: Namespace is the namespace of the resource being referenced
                  type: string
              required:
              - name
              - namespace
              type: object
            subjects:
              items:
                description: Subject contains a reference to the object or user identities
                  a role binding applies to.  This can either hold a direct API object
                  reference, or a value for non-objects such as user and group names.
                properties:
                  apiGroup:
                    description: APIGroup holds the API group of the referenced subject.
                      Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
                      for User and Group subjects.
                    type: string
                  kind:
                    description: Kind of object being referenced. Values defined by
                      this API group are "User", "Group", and "ServiceAccount". If
                      the Authorizer does not recognized the kind value, the Authorizer
                      should report an error.
                    type: string
                  name:
                    description: Name of the object being referenced.
                    type: string
                  namespace:
                    description: Namespace of the referenced object.  If the object
                      kind is non-namespace, such as "User" or "Group", and this value
                      is not empty the Authorizer should report an error.
                    type: string
                required:
                - kind
                - name
                type: object
              type: array
            ttl:
              description: Specifies the TTL for the use of the STS token. This is
                specified as a string with a duration suffix. Valid only when credential_type
                is assumed_role or federation_token. When not specified, the default_sts_ttl
                set for the role will be used. If that is also not set, then the default
                value of 3600s will be used. AWS places limits on the maximum TTL
                allowed. See the AWS documentation on the DurationSeconds parameter
                for AssumeRole (for assumed_role credential types) and GetFederationToken
                (for federation_token credential types) for more details.
              type: string
            useSTS:
              description: If true, '/aws/sts' endpoint will be used to retrieve credential
                Otherwise, '/aws/creds' endpoint will be used to retrieve credential
              type: boolean
          required:
          - roleRef
          - subjects
          type: object
        status:
          properties:
            conditions:
              description: Conditions applied to the request, such as approval or
                denial.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.  If
                      that is not known, then using the time when the API field changed
                      is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  observedGeneration:
                    description: If set, this represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.condition[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    format: int64
                    type: integer
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                type: object
              type: array
            lease:
              description: Contains lease info
              properties:
                duration:
                  description: lease duration
                  type: string
                id:
                  description: lease id
                  type: string
                renewable:
                  description: Specifies whether this lease is renewable
                  type: boolean
              type: object
            secret:
              description: Name of the secret containing AWSCredential AWSCredentials
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
