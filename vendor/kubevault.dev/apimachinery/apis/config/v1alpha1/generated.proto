/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package kubevault.dev.apimachinery.apis.config.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// AWSAuthConfig contains necessary information for
// performing AWS authentication to the Vault server.
message AWSAuthConfig {
  // Specifies the header value that required
  // if X-Vault-AWS-IAM-Server-ID Header is set in Vault.
  // +optional
  optional string headerValue = 1;
}

// AzureAuthConfig contains necessary information for
// performing Azure authentication to the Vault server.
message AzureAuthConfig {
  // Specifies the subscription ID for the machine
  // that generated the MSI token.
  // +optional
  optional string subscriptionID = 1;

  // Specifies the resource group for the machine
  // that generated the MSI token.
  // +optional
  optional string resourceGroupName = 2;

  // Specifies the virtual machine name for the machine
  // that generated the MSI token. If VmssName is provided,
  // this value is ignored.
  // +optional
  optional string vmName = 3;

  // Specifies the virtual machine scale set name
  // for the machine that generated the MSI token.
  // +optional
  optional string vmssName = 4;
}

// KubernetesAuthConfiguration contains necessary information for
// performing Kubernetes authentication to the Vault server.
message KubernetesAuthConfig {
  // Specifies the service account name
  optional string serviceAccountName = 1;

  // Specifies the service account name for token reviewer
  // It has system:auth-delegator permission
  // It's jwt token is used on vault kubernetes auth config
  // +optional
  optional string tokenReviewerServiceAccountName = 2;

  // Specifies to use pod service account for vault csi driver
  // +optional
  optional bool usePodServiceAccountForCSIDriver = 3;
}

// VaultServerConfiguration defines a Vault Server configuration.
message VaultServerConfiguration {
  // Specifies the path which is used for authentication by this AppBinding.
  // If vault server is provisioned by KubeVault, this is usually `kubernetes`.
  // +optional
  optional string path = 1;

  // Specifies the vault role name for policy controller
  // It has permission to create policy in vault
  // +optional
  optional string vaultRole = 2;

  // Specifies the Kubernetes authentication information
  // +optional
  optional KubernetesAuthConfig kubernetes = 3;

  // Specifies the Azure authentication information
  // +optional
  optional AzureAuthConfig azure = 4;

  // Specifies the AWS authentication information
  // +optional
  optional AWSAuthConfig aws = 5;
}

