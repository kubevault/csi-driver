// +build !ignore_autogenerated

/*
Copyright 2019 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersion) DeepCopyInto(out *ElasticsearchVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersion.
func (in *ElasticsearchVersion) DeepCopy() *ElasticsearchVersion {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionDatabase) DeepCopyInto(out *ElasticsearchVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionDatabase.
func (in *ElasticsearchVersionDatabase) DeepCopy() *ElasticsearchVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionExporter) DeepCopyInto(out *ElasticsearchVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionExporter.
func (in *ElasticsearchVersionExporter) DeepCopy() *ElasticsearchVersionExporter {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionInitContainer) DeepCopyInto(out *ElasticsearchVersionInitContainer) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionInitContainer.
func (in *ElasticsearchVersionInitContainer) DeepCopy() *ElasticsearchVersionInitContainer {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionInitContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionList) DeepCopyInto(out *ElasticsearchVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ElasticsearchVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionList.
func (in *ElasticsearchVersionList) DeepCopy() *ElasticsearchVersionList {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ElasticsearchVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionPodSecurityPolicy) DeepCopyInto(out *ElasticsearchVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionPodSecurityPolicy.
func (in *ElasticsearchVersionPodSecurityPolicy) DeepCopy() *ElasticsearchVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionSpec) DeepCopyInto(out *ElasticsearchVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.Tools = in.Tools
	out.InitContainer = in.InitContainer
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionSpec.
func (in *ElasticsearchVersionSpec) DeepCopy() *ElasticsearchVersionSpec {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchVersionTools) DeepCopyInto(out *ElasticsearchVersionTools) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchVersionTools.
func (in *ElasticsearchVersionTools) DeepCopy() *ElasticsearchVersionTools {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchVersionTools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersion) DeepCopyInto(out *EtcdVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersion.
func (in *EtcdVersion) DeepCopy() *EtcdVersion {
	if in == nil {
		return nil
	}
	out := new(EtcdVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersionDatabase) DeepCopyInto(out *EtcdVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersionDatabase.
func (in *EtcdVersionDatabase) DeepCopy() *EtcdVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(EtcdVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersionExporter) DeepCopyInto(out *EtcdVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersionExporter.
func (in *EtcdVersionExporter) DeepCopy() *EtcdVersionExporter {
	if in == nil {
		return nil
	}
	out := new(EtcdVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersionList) DeepCopyInto(out *EtcdVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EtcdVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersionList.
func (in *EtcdVersionList) DeepCopy() *EtcdVersionList {
	if in == nil {
		return nil
	}
	out := new(EtcdVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersionSpec) DeepCopyInto(out *EtcdVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.Tools = in.Tools
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersionSpec.
func (in *EtcdVersionSpec) DeepCopy() *EtcdVersionSpec {
	if in == nil {
		return nil
	}
	out := new(EtcdVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdVersionTools) DeepCopyInto(out *EtcdVersionTools) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdVersionTools.
func (in *EtcdVersionTools) DeepCopy() *EtcdVersionTools {
	if in == nil {
		return nil
	}
	out := new(EtcdVersionTools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersion) DeepCopyInto(out *MemcachedVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersion.
func (in *MemcachedVersion) DeepCopy() *MemcachedVersion {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersionDatabase) DeepCopyInto(out *MemcachedVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersionDatabase.
func (in *MemcachedVersionDatabase) DeepCopy() *MemcachedVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersionExporter) DeepCopyInto(out *MemcachedVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersionExporter.
func (in *MemcachedVersionExporter) DeepCopy() *MemcachedVersionExporter {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersionList) DeepCopyInto(out *MemcachedVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MemcachedVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersionList.
func (in *MemcachedVersionList) DeepCopy() *MemcachedVersionList {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MemcachedVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersionPodSecurityPolicy) DeepCopyInto(out *MemcachedVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersionPodSecurityPolicy.
func (in *MemcachedVersionPodSecurityPolicy) DeepCopy() *MemcachedVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemcachedVersionSpec) DeepCopyInto(out *MemcachedVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemcachedVersionSpec.
func (in *MemcachedVersionSpec) DeepCopy() *MemcachedVersionSpec {
	if in == nil {
		return nil
	}
	out := new(MemcachedVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersion) DeepCopyInto(out *MongoDBVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersion.
func (in *MongoDBVersion) DeepCopy() *MongoDBVersion {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionDatabase) DeepCopyInto(out *MongoDBVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionDatabase.
func (in *MongoDBVersionDatabase) DeepCopy() *MongoDBVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionExporter) DeepCopyInto(out *MongoDBVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionExporter.
func (in *MongoDBVersionExporter) DeepCopy() *MongoDBVersionExporter {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionInitContainer) DeepCopyInto(out *MongoDBVersionInitContainer) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionInitContainer.
func (in *MongoDBVersionInitContainer) DeepCopy() *MongoDBVersionInitContainer {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionInitContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionList) DeepCopyInto(out *MongoDBVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDBVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionList.
func (in *MongoDBVersionList) DeepCopy() *MongoDBVersionList {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDBVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionPodSecurityPolicy) DeepCopyInto(out *MongoDBVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionPodSecurityPolicy.
func (in *MongoDBVersionPodSecurityPolicy) DeepCopy() *MongoDBVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionSpec) DeepCopyInto(out *MongoDBVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.Tools = in.Tools
	out.InitContainer = in.InitContainer
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionSpec.
func (in *MongoDBVersionSpec) DeepCopy() *MongoDBVersionSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDBVersionTools) DeepCopyInto(out *MongoDBVersionTools) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDBVersionTools.
func (in *MongoDBVersionTools) DeepCopy() *MongoDBVersionTools {
	if in == nil {
		return nil
	}
	out := new(MongoDBVersionTools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersion) DeepCopyInto(out *MySQLVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersion.
func (in *MySQLVersion) DeepCopy() *MySQLVersion {
	if in == nil {
		return nil
	}
	out := new(MySQLVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionDatabase) DeepCopyInto(out *MySQLVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionDatabase.
func (in *MySQLVersionDatabase) DeepCopy() *MySQLVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionExporter) DeepCopyInto(out *MySQLVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionExporter.
func (in *MySQLVersionExporter) DeepCopy() *MySQLVersionExporter {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionInitContainer) DeepCopyInto(out *MySQLVersionInitContainer) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionInitContainer.
func (in *MySQLVersionInitContainer) DeepCopy() *MySQLVersionInitContainer {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionInitContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionList) DeepCopyInto(out *MySQLVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySQLVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionList.
func (in *MySQLVersionList) DeepCopy() *MySQLVersionList {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySQLVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionPodSecurityPolicy) DeepCopyInto(out *MySQLVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionPodSecurityPolicy.
func (in *MySQLVersionPodSecurityPolicy) DeepCopy() *MySQLVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionSpec) DeepCopyInto(out *MySQLVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.Tools = in.Tools
	out.InitContainer = in.InitContainer
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionSpec.
func (in *MySQLVersionSpec) DeepCopy() *MySQLVersionSpec {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLVersionTools) DeepCopyInto(out *MySQLVersionTools) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLVersionTools.
func (in *MySQLVersionTools) DeepCopy() *MySQLVersionTools {
	if in == nil {
		return nil
	}
	out := new(MySQLVersionTools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersion) DeepCopyInto(out *PostgresVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersion.
func (in *PostgresVersion) DeepCopy() *PostgresVersion {
	if in == nil {
		return nil
	}
	out := new(PostgresVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionDatabase) DeepCopyInto(out *PostgresVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionDatabase.
func (in *PostgresVersionDatabase) DeepCopy() *PostgresVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionExporter) DeepCopyInto(out *PostgresVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionExporter.
func (in *PostgresVersionExporter) DeepCopy() *PostgresVersionExporter {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionList) DeepCopyInto(out *PostgresVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionList.
func (in *PostgresVersionList) DeepCopy() *PostgresVersionList {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionPodSecurityPolicy) DeepCopyInto(out *PostgresVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionPodSecurityPolicy.
func (in *PostgresVersionPodSecurityPolicy) DeepCopy() *PostgresVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionSpec) DeepCopyInto(out *PostgresVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.Tools = in.Tools
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionSpec.
func (in *PostgresVersionSpec) DeepCopy() *PostgresVersionSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresVersionTools) DeepCopyInto(out *PostgresVersionTools) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresVersionTools.
func (in *PostgresVersionTools) DeepCopy() *PostgresVersionTools {
	if in == nil {
		return nil
	}
	out := new(PostgresVersionTools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersion) DeepCopyInto(out *RedisVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersion.
func (in *RedisVersion) DeepCopy() *RedisVersion {
	if in == nil {
		return nil
	}
	out := new(RedisVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedisVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersionDatabase) DeepCopyInto(out *RedisVersionDatabase) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersionDatabase.
func (in *RedisVersionDatabase) DeepCopy() *RedisVersionDatabase {
	if in == nil {
		return nil
	}
	out := new(RedisVersionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersionExporter) DeepCopyInto(out *RedisVersionExporter) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersionExporter.
func (in *RedisVersionExporter) DeepCopy() *RedisVersionExporter {
	if in == nil {
		return nil
	}
	out := new(RedisVersionExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersionList) DeepCopyInto(out *RedisVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RedisVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersionList.
func (in *RedisVersionList) DeepCopy() *RedisVersionList {
	if in == nil {
		return nil
	}
	out := new(RedisVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RedisVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersionPodSecurityPolicy) DeepCopyInto(out *RedisVersionPodSecurityPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersionPodSecurityPolicy.
func (in *RedisVersionPodSecurityPolicy) DeepCopy() *RedisVersionPodSecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(RedisVersionPodSecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisVersionSpec) DeepCopyInto(out *RedisVersionSpec) {
	*out = *in
	out.DB = in.DB
	out.Exporter = in.Exporter
	out.PodSecurityPolicies = in.PodSecurityPolicies
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisVersionSpec.
func (in *RedisVersionSpec) DeepCopy() *RedisVersionSpec {
	if in == nil {
		return nil
	}
	out := new(RedisVersionSpec)
	in.DeepCopyInto(out)
	return out
}
